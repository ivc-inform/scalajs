def compareValues(value1: JSAny, value2: JSAny, field: DataSourceField | ListGridField | DetailViewerField)
    var defaultGroupingMode: String
    def editFormatter(value: JSAny, field: FormItem = js.native, form: DynamicForm = js.native, record: Record = js.native): String
    var editorType: FormItem
    var exportFormat: FormatString
    var fieldProperties: DataSourceField
    var filterEditorType: FormItem
    var format: FormatString
    def getAtomicValue(value: JSAny, reason: String): JSAny
    def getGroupingModes(): ValueMap
    def getGroupTitle(value: JSAny, record: Record, field: Types.Object, fieldName: String, component: Canvas): String
    def getGroupValue(value: JSAny, record: Record, field: Types.Object, fieldName: String, component: Canvas): JSAny
    var groupingModes: ValueMap
    val inheritsFrom: ID
    val name: ID
    def normalDisplayFormatter(value: JSAny, field: FormItem | DetailViewerField = js.native, component: DataBoundComponent = js.native, record: Types.Object = js.native): void
    def parseInput(value: JSAny, field: FormItem = js.native, form: DynamicForm = js.native, record: Record = js.native): void
    var readOnlyEditorType: FormItem
    def shortDisplayFormatter(value: JSAny, field: FormItem | DetailViewerField = js.native, component: DataBoundComponent = js.native, record: Types.Object = js.native): void
    def updateAtomicValue(atomicValue: JSAny, currentValue: JSAny, reason: String): JSAny
    var validators: js.Array[Validator]
    var validOperators: js.Array[OperatorId]
    var valueMap: ValueMap
